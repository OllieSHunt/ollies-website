# This script takes the markdown files from the `blog` folder and converts them
# into html documents in the `html/blog` folder.
#
# Script dependencies:
# - python
# - pandoc

import sys
import os
import subprocess
from typing import List
from pathlib import Path

# Fetches all the files from a folder.
#
# For simplicity, this function does not support other folders nested within the
# main folder.
def fetchAllFromPath(fetchLocation: Path) -> List[Path]:
    filePaths = []

    for i, (dirpath, dirnames, filenames) in enumerate(fetchLocation.walk()):
        if i != 0:
            sys.exit("ERROR: Folders in %s when only files supported" % fetchLocation)

        for filename in filenames:
            filePaths.append(dirpath / filename)

    return filePaths

# Takes a path to a markdown file and returns a string of HTML code.
#
# This function needs the pandoc binary to be installed in order to work.
def mdToHtml(mdPath: Path) -> str:
    # Run external command
    result = subprocess.run(
        ["pandoc", "-f", "gfm", "-t", "html5", mdPath],
        capture_output=True, text=True
    )

    # Exit if command failed
    if result.returncode != 0:
        sys.exit("ERROR: Markdown to HTML conversion command exited with non-zero exit code.\n\nSTDOUT:\n%s\n\nSTDERR:\n%s" % (result.stdout, result.stderr))

    return (
        "<!-- HTML generated by [pandoc](https://pandoc.org) from markdown file -->\n\n" +
        result.stdout
    )

######## FUNCTION DEFINITIONS END HERE ########

scriptDir = Path(os.path.dirname(os.path.abspath(__file__)))
projectRoot = (scriptDir / "..").cwd() # Update this path if you move the script

inputFolder = projectRoot / "blog"
outputFolder = projectRoot / "html/blog"

mdArticlePaths = fetchAllFromPath(inputFolder)
articleTemplatePath = (projectRoot / "html/article-template.shtml")
articleTemplate = articleTemplatePath.open().read()
articleTemplatePlaceholder = "<!-- ARTICLE CONTENT -->" # String to look for in the template

for mdArticlePath in mdArticlePaths:
    print("Converting %s to HTML" % mdArticlePath.name)

    # Convert this markdown file to html
    htmlArticle = mdToHtml(mdArticlePath)

    # Fill this article into the template
    htmlArticle = articleTemplate.replace(articleTemplatePlaceholder, htmlArticle)

    # Build the output path and save the file
    outputPath = (outputFolder / mdArticlePath.name).with_suffix(articleTemplatePath.suffix)
    outputPath.write_text(htmlArticle)
